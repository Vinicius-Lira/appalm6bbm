{"remainingRequest":"/home/vlira/Documentos/ProntuarioBM/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vlira/Documentos/ProntuarioBM/client/src/views/Exames.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/vlira/Documentos/ProntuarioBM/client/src/views/Exames.vue","mtime":1569606505399},{"path":"/home/vlira/Documentos/ProntuarioBM/client/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/vlira/Documentos/ProntuarioBM/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vlira/Documentos/ProntuarioBM/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vlira/Documentos/ProntuarioBM/client/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/vlira/Documentos/ProntuarioBM/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vlira/Documentos/ProntuarioBM/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@media only screen and (max-width: 640px) {\n    .snackbar {\n        margin-top: -10px;\n    }\n}\n\n@media only screen and (min-width: 640px) {\n    .snackbar {\n        margin-top: -50px;\n    }\n}\n",{"version":3,"sources":["Exames.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgRA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Exames.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <v-data-table\n        :headers=\"headers\"\n        :items=\"desserts\"\n        :search=\"search\"\n        class=\"elevation-1 ma-2\"\n        :footer-props=\"{\n            'items-per-page-options': [8,10,12,14]\n        }\"\n    >\n\n        <template v-slot:top>\n            <v-toolbar flat color=\"white\">\n\n                <v-container>\n                    <v-row>\n                        <v-col cols=\"12\" sm=\"12\" md=\"5\">\n                            <v-text-field\n                                v-model=\"search\"\n                                append-icon=\"mdi-magnify\"\n                                label=\"Buscar\"\n                                single-line\n                                hide-details\n                                outlined\n                            ></v-text-field>\n                        </v-col>\n\n                    </v-row>\n                </v-container>\n\n                <snackbar\n                    :textoSnackbar=\"textoSnackbar\"\n                    :color=\"color\"\n                    :snackbar=\"snackbar\"\n                    v-on:closeSnackbar=\"closeSnackbar\"\n                ></snackbar>\n\n                <div class=\"flex-grow-1\"></div>\n\n                <parametros-exame-dialog\n                    v-on:setFalseDialog=\"closeDialogParametros\"\n                    v-bind:dialog=\"dialogParametros\"\n                    v-bind:idExame=\"editedItem.id\"\n                ></parametros-exame-dialog>\n\n                <v-dialog v-model=\"dialog\" max-width=\"1000px\">\n\n                    <template v-slot:activator=\"{ on }\">\n                        <v-btn color=\"primary\" class=\"mb-2\"  v-on=\"on\">Novo</v-btn>\n                    </template>\n\n                    <v-card>\n                        <v-card-title>\n                            <span class=\"headline\">{{ formTitle }}</span>\n                        </v-card-title>\n\n                        <v-card-text>\n                            <v-container>\n                                <v-row>\n                                    <v-col cols=\"12\" sm=\"12\" md=\"6\">\n                                        <v-text-field\n                                            v-model=\"editedItem.exame\"\n                                            :rules=\"[v => !!v || 'Obrigatório prencher o exame!']\"\n                                            label=\"Exame\"\n                                            outlined\n                                        ></v-text-field>\n                                    </v-col>\n                                    <v-col cols=\"12\" sm=\"12\" md=\"6\">\n                                        <v-text-field\n                                            v-model=\"editedItem.descricao\"\n                                            :rules=\"[v => !!v || 'Obrigatório prencher a descrição!']\"\n                                            label=\"Descrição\"\n                                            outlined\n                                        ></v-text-field>\n                                    </v-col>\n                                </v-row>\n                            </v-container>\n                        </v-card-text>\n\n                        <v-card-actions>\n                            <div class=\"flex-grow-1\"></div>\n                            <v-btn color=\"blue darken-1\" text @click=\"close\">Cancelar</v-btn>\n                            <v-btn color=\"blue darken-1\" text @click=\"save\">Salvar</v-btn>\n                        </v-card-actions>\n                    </v-card>\n                </v-dialog>\n\n            </v-toolbar>\n        </template>\n\n        <template v-slot:item.action=\"{ item }\">\n            <v-icon\n                small\n                class=\"mr-2\"\n                @click=\"openDialogParametros(item)\"\n            >\n                mdi-eye\n            </v-icon>\n\n            <v-icon\n                small\n                class=\"mr-2\"\n                @click=\"editItem(item)\"\n            >\n                mdi-pencil\n            </v-icon>\n            <v-icon\n                small\n                @click=\"deleteItem(item)\"\n            >\n                mdi-delete\n            </v-icon>\n            </template>\n\n            <template v-slot:no-data>\n            <v-btn color=\"primary\" @click=\"initialize\">Reset</v-btn>\n        </template>\n\n    </v-data-table>\n\n</template>\n\n<script>\n\nexport default {\n    data: () => ({\n        dialog: false,\n        search: \"\",\n        textoSnackbar: \"\",\n        color: 'success',\n        snackbar: false,\n        dialogParametros: false,\n        dialogViewParametros: false,\n        rowsPerPageItems: [8, 12, 15],\n        pagination: {\n            rowsPerPage: 20\n        },\n        headers: [\n            {\n                text: 'Exame',\n                align: 'left',\n                sortable: true,\n                value: 'exame',\n            },\n            { text: 'Descrição', value: 'descricao' },\n            { text: 'Ações', value: 'action', sortable: false },\n        ],\n        desserts: [],\n        editedIndex: -1,\n        editedItem: {\n            exame: \"\",\n            descricao: \"\",\n            createdAt: \"\",\n            updatedAt: \"\"\n        },\n        defaultItem: {\n            exame: \"\",\n            descricao: \"\",\n            createdAt: \"\",\n            updatedAt: \"\"\n        },\n    }),\n\n    computed: {\n        formTitle () {\n            return this.editedIndex === -1 ? 'Novo exame' : 'Editar exame'\n        }\n    },\n    watch: {\n        dialog (val) {\n            val || this.close()\n        },\n    },\n    created () {\n        this.initialize()\n    },\n    methods: {\n        initialize () {\n            this.axios.get('http://localhost:3000/exame').then(response => {\n                this.desserts = response.data;\n            });\n        },\n        closeSnackbar () {\n            this.snackbar = false;\n        },\n        openDialogParametros(item) {\n            this.editedIndex = this.desserts.indexOf(item);\n            this.editedItem = Object.assign({}, item);\n            this.dialogParametros = true;\n        },\n        closeDialogParametros() {\n            this.dialogParametros = false;\n            this.editedItem = Object.assign({}, this.defaultItem);\n            this.editedIndex = -1\n        },\n        editItem (item) {\n            this.editedIndex = this.desserts.indexOf(item);\n            this.editedItem = Object.assign({}, item);\n            this.dialog = true;\n        },\n\n        deleteItem (item) {\n            this.axios.delete('http://localhost:3000/exame/' + item.id + \"/delete\").then(response => {\n                if(response.data){\n                    this.snackbar = true;\n                    this.color = 'success';\n                    this.textoSnackbar = \"Exame apagada com sucesso!\";\n                    this.initialize();\n                }else {\n                    this.snackbar = true;\n                    this.color = 'error';\n                    this.textoSnackbar = \"Ocorreu um erro, o exame parâmetros associado a ele!\";\n                }\n            });\n        },\n\n        close () {\n            this.dialog = false;\n            setTimeout(() => {\n                this.editedItem = Object.assign({}, this.defaultItem)\n                this.editedIndex = -1\n            }, 300);\n        },\n        validaCampos() {\n            return  this.editedItem.exame != '' && this.editedItem.descricao != '';\n        },\n        save () {\n            if (this.editedIndex > -1) {\n                this.axios.put('http://localhost:3000/exame', this.editedItem).then(response => {\n                    if(response.data){\n                        this.textoSnackbar = \"Registro atualizado com sucesso!\";\n                        this.snackbar = true;\n                        this.color = 'success';\n                        this.initialize();\n                        this.close();\n                    }else {\n                        this.snackbar = true;\n                        this.color = 'error';\n                        this.textoSnackbar = \"Ocorreu um erro ao atualizar!\";\n                        this.close();\n                    }\n                });\n            } else {\n                if(this.validaCampos()){\n                    this.axios.post('http://localhost:3000/exame', this.editedItem).then(response => {\n                        if(response.data.id){\n                            this.textoSnackbar = \"Exame inserido com sucesso!\";\n                            this.snackbar = true;\n                            this.color = 'success';\n                            this.initialize();\n                            this.close();\n                        }else {\n                            this.snackbar = true;\n                            this.color = 'error';\n                            this.textoSnackbar = \"Ocorreu um erro ao cadastrar!\";\n                            this.close();\n                        }\n                    });\n                }else {\n                    this.snackbar = true;\n                    this.color = 'error';\n                    this.textoSnackbar = \"Existe campos vazios ou incorretos!\";\n                    this.close();\n                }\n            }\n        },\n\n    }\n}\n</script>\n\n<style>\n    @media only screen and (max-width: 640px) {\n        .snackbar {\n            margin-top: -10px;\n        }\n    }\n\n    @media only screen and (min-width: 640px) {\n        .snackbar {\n            margin-top: -50px;\n        }\n    }\n</style>\n"]}]}