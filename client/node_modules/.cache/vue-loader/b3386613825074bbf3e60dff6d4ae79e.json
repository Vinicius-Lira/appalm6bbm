{"remainingRequest":"/home/vlira/Documentos/SistemaB4/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vlira/Documentos/SistemaB4/client/src/components/helper/ParametrosExame.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vlira/Documentos/SistemaB4/client/src/components/helper/ParametrosExame.vue","mtime":1569606505379},{"path":"/home/vlira/Documentos/SistemaB4/client/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/home/vlira/Documentos/SistemaB4/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vlira/Documentos/SistemaB4/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n    props: ['dialog', 'idExame'],\n    data: () => ({\n        exame: \"\",\n        dialogAddParametro: false,\n        headers: [\n            {\n                text: 'Parâmetro',\n                align: 'left',\n                sortable: true,\n                value: 'parametro',\n            },\n            { text: 'Unidade medida', value: 'unidadeMedida' },\n            { text: 'Ações', value: 'action', sortable: false },\n        ],\n        desserts: [],\n        search: \"\",\n        editedIndex: -1,\n        editedItem: {\n            parametro: \"\",\n            unidadeMedida: \"\",\n            idExame: null,\n            createdAt: \"\",\n            updatedAt: \"\"\n        },\n        defaultItem: {\n            parametro: \"\",\n            unidadeMedida: \"\",\n            idExame: null,\n            createdAt: \"\",\n            updatedAt: \"\"\n        },\n        textoSnackbar: \"\",\n        color: 'success',\n        snackbar: false,\n        comparacoes: [\n            {\n                text: \"< (Menor que minimo)\",\n                value: \"<\"\n            },\n            {\n                text: \"> (Maior que maximo)\",\n                value: \">\"\n            },\n            {\n                text: \"<> (Entre o minimo e maximo)\",\n                value: \"<>\"\n            }\n        ],\n        sexos: [\n            \"FEMININO\",\n            \"MASCULINO\"\n        ],\n        dessertsValoresRerefencia: [],\n        headersValoresRerefencia: [\n            {\n                text: 'Valor',\n                align: 'left',\n                sortable: true,\n                value: 'valor',\n            },\n            { text: 'idade', value: 'idade' },\n            { text: 'sexo', value: 'sexo' },\n            { text: 'Ações', value: 'action', sortable: false },\n        ],\n        editedIndexValoresReferencia: -1,\n        editedItemValoresReferencia: {\n            comparacao: \"\",\n            idade: \"\",\n            idadeMinima: \"\",\n            idadeMaxima: \"\",\n            valorMinimo: \"\",\n            valorMaximo: \"\",\n            sexo: \"\",\n            idParametro: null,\n            createdAt: \"\",\n            updatedAt: \"\"\n        },\n        defaultItemValoresReferencia: {\n            comparacao: \"\",\n            idade: \"\",\n            idadeMinima: \"\",\n            idadeMaxima: \"\",\n            valorMinimo: \"\",\n            valorMaximo: \"\",\n            sexo: \"\",\n            idParametro: null,\n            createdAt: \"\",\n            updatedAt: \"\"\n        },\n        textoSnackbarValoresReferencia: \"\",\n        colorValoresReferencia: 'success',\n        snackbarValoresReferencia: false,\n        dialogValoresReferencia: false,\n        mostraTabelaValoresReferencia: false\n    }),\n    created () {\n        this.initialize()\n    },\n    computed: {\n        formTitle () {\n            return this.editedIndex === -1 ? 'Novo Parâmetro' : 'Editar Parâmetro'\n        },\n        formTitleValoresRefencia () {\n            return this.editedIndex === -1 ? 'Novo Valor Refêrencia' : 'Editar Valor Refêrencia'\n        }\n    },\n    watch: {\n        dialog() {\n            this.axios.get('http://localhost:3000/exame/' + this.idExame).then(response => {\n                this.exame = response.data;\n            });\n\n            this.atualizaParametros();\n        },\n        dialogAddParametro (val) {\n            this.axios.get('http://localhost:3000/referenciaParametroExame/getByIdParametro/' + this.editedItem.id).then(response => {\n                this.dessertsValoresReferencia = response.data;\n            });\n            // this.mostraTabelaValoresReferencia = false;\n            val || this.close();\n        },\n    },\n    methods: {\n        initialize () {\n\n        },\n        closeSnackbar () {\n            this.snackbar = false;\n        },\n        atualizaParametros() {\n            this.axios.get('http://localhost:3000/parametroExame/getByIdExame/' + this.idExame ).then(response => {\n                this.desserts = response.data;\n            });\n        },\n        editItem (item) {\n            this.editedIndex = this.desserts.indexOf(item);\n            this.editedItem = Object.assign({}, item);\n            this.atualizaValoresReferencia();\n            this.mostraTabelaValoresReferencia = true;\n            this.dialogAddParametro = true;\n        },\n        deleteItem (item) {\n            this.axios.delete('http://localhost:3000/parametroExame/' + item.id + \"/delete\").then(response => {\n                if(response.data){\n                    this.snackbar = true;\n                    this.color = 'success';\n                    this.textoSnackbar = \"Parâmetro apagado com sucesso!\";\n                    this.atualizaParametros();\n                }else {\n                    this.snackbar = true;\n                    this.color = 'error';\n                    this.textoSnackbar = \"Ocorreu um erro ao tentar apagar o registro!\";\n                }\n            });\n        },\n        close () {\n            this.snackbarValoresReferencia = false;\n            this.dialogAddParametro = false;\n            this.mostraTabelaValoresReferencia = false;\n            setTimeout(() => {\n                this.editedItem = Object.assign({}, this.defaultItem)\n                this.editedIndex = -1\n            }, 300);\n        },\n        validaCampos() {\n            return  this.editedItem.parametro != '' && this.editedItem.unidadeMedida != '';\n        },\n        save () {\n            this.snackbarValoresReferencia = false;\n            if (this.editedIndex > -1) {\n                this.editedItem.idExame = this.idExame;\n                this.axios.put('http://localhost:3000/parametroExame', this.editedItem).then(response => {\n                    if(response.data){\n                        this.textoSnackbar = \"Registro atualizado com sucesso!\";\n                        this.snackbar = true;\n                        this.color = 'success';\n                        this.atualizaParametros();\n                        this.dialogAddParametro = false;\n                    }else {\n                        this.snackbar = true;\n                        this.color = 'error';\n                        this.textoSnackbar = \"Ocorreu um erro ao atualizar!\";\n                        this.dialogAddParametro = false;\n                    }\n                });\n            } else {\n                if(this.validaCampos()){\n                    this.editedItem.idExame = this.idExame;\n                    this.axios.post('http://localhost:3000/parametroExame', this.editedItem).then(response => {\n                        if(response.data.id){\n                            this.textoSnackbar = \"Parâmetro inserida com sucesso!\";\n                            this.snackbar = true;\n                            this.color = 'success';\n                            this.atualizaParametros();\n                            this.dialogAddParametro = false;\n                        }else {\n                            this.snackbar = true;\n                            this.color = 'error';\n                            this.textoSnackbar = \"Ocorreu um erro ao cadastrar!\";\n                            this.dialogAddParametro = false;\n                        }\n                    });\n                }else {\n                    this.snackbar = true;\n                    this.color = 'error';\n                    this.textoSnackbar = \"Existe campos vazios ou incorretos!\";\n                    this.dialogAddParametro = false;\n                }\n            }\n        },\n        closeSnackbarValoresReferencia () {\n            this.snackbarValoresReferencia = false;\n        },\n        atualizaValoresReferencia() {\n            this.axios.get('http://localhost:3000/referenciaParametroExame/getByIdParametro/' + this.editedItem.id).then(response => {\n                this.dessertsValoresRerefencia = response.data;\n\n                for(var i = 0; i < response.data.length; i++){\n                    this.dessertsValoresRerefencia[i].valor = (parseInt(response.data[i].valorMinimo) == 0 ? \" \" : response.data[i].valorMinimo) + \" \" + response.data[i].comparacao + \" \" + (parseInt(response.data[i].valorMaximo) == 0 ? \" \" : response.data[i].valorMaximo);\n                    this.dessertsValoresRerefencia[i].idade = (parseInt(response.data[i].idadeMinima) == 0 ? \" \" : response.data[i].idadeMinima) + \" \" + response.data[i].idade + \" \" + (parseInt(response.data[i].idadeMaxima) == 0 ? \" \" : response.data[i].idadeMaxima);\n                }\n\n            });\n        },\n        editItemValorReferencia (item) {\n            this.editedIndexValoresReferencia = this.dessertsValoresRerefencia.indexOf(item);\n            this.editedItemValoresReferencia = Object.assign({}, item);\n            this.dialogValoresReferencia = true;\n        },\n        deleteItemValorReferencia (item) {\n            this.axios.delete('http://localhost:3000/referenciaParametroExame/' + item.id + \"/delete\").then(response => {\n                if(response.data){\n                    this.textoSnackbarValoresReferencia = \"Valor refência apagado com sucesso!\";\n                    this.snackbarValoresReferencia = true;\n                    this.colorValoresReferencia = 'success';\n\n                    this.atualizaValoresReferencia();\n                }else {\n                    this.textoSnackbarValoresReferencia = \"Ocorreu um erro ao tentar apagar o registro!\";\n                    this.snackbarValoresReferencia = true;\n                    this.colorValoresReferenciar = 'error';\n                }\n            });\n        },\n        closeValoresReferencia () {\n            this.dialogValoresReferencia = false;\n        },\n        validaCamposValoresReferencia() {\n            var valores = false;\n            var idade = false;\n            if((this.editedIndexValoresReferencia.valorMinimo != \"\" && this.editedIndexValoresReferencia.comparacao != \"\" && this.editedIndexValoresReferencia.valorMaximo != \"\")\n                || (this.editedIndexValoresReferencia.valorMinimo == \"\" && this.editedIndexValoresReferencia.comparacao != \"\" && this.editedIndexValoresReferencia.valorMaximo != \"\")\n                || (this.editedIndexValoresReferencia.valorMinimo != \"\" && this.editedIndexValoresReferencia.comparacao != \"\" && this.editedIndexValoresReferencia.valorMaximo == \"\")){\n                    valores = true;\n            }\n\n            if((this.editedIndexValoresReferencia.idadeMinima != \"\" && this.editedIndexValoresReferencia.idade != \"\" && this.editedIndexValoresReferencia.idadeMaxima != \"\")\n                || (this.editedIndexValoresReferencia.idadeMinima == \"\" && this.editedIndexValoresReferencia.idade != \"\" && this.editedIndexValoresReferencia.idadeMaxima != \"\")\n                || (this.editedIndexValoresReferencia.idadeMinima != \"\" && this.editedIndexValoresReferencia.idade != \"\" && this.editedIndexValoresReferencia.idadeMaxima == \"\")){\n                    idade = true;\n            }\n\n            return valores && idade && this.editedIndexValoresReferencia.sexo != \"\";\n        },\n        saveValoresReferencia () {\n            if (this.editedIndexValoresReferencia > -1) {\n                this.editedItemValoresReferencia.idParametro = this.editedItem.id;\n                this.axios.put('http://localhost:3000/referenciaParametroExame', this.editedItemValoresReferencia).then(response => {\n                    if(response.data){\n                        this.textoSnackbarValoresReferencia = \"Registro atualizado com sucesso!\";\n                        this.snackbarValoresReferencia = true;\n                        this.colorValoresReferencia = 'success';\n                        this.atualizaValoresReferencia();\n                        this.closeValoresReferencia();\n                    }else {\n                        this.textoSnackbarValoresReferencia = \"Ocorreu um erro ao atualizar!\";\n                        this.snackbarValoresReferencia = true;\n                        this.colorValoresReferencia = 'error';\n                        this.closeValoresReferencia();\n                    }\n                });\n            } else {\n                if(this.validaCamposValoresReferencia()){\n                    this.editedItemValoresReferencia.idParametro = this.editedItem.id;\n                    this.axios.post('http://localhost:3000/referenciaParametroExame', this.editedItemValoresReferencia).then(response => {\n                        if(response.data.id){\n                            this.textoSnackbarValoresReferencia = \"Valor refêrencia inserido com sucesso!\";\n                            this.snackbarValoresReferencia = true;\n                            this.colorValoresReferencia = 'success';\n                            this.atualizaValoresReferencia();\n                            this.closeValoresReferencia();\n                        }else {\n                            this.textoSnackbarValoresReferencia = \"Ocorreu um erro ao cadastrar!\";\n                            this.snackbarValoresReferencia = true;\n                            this.colorValoresReferencia = 'error';\n                            this.closeValoresReferencia();\n                        }\n                    });\n                }else {\n                    this.textoSnackbarValoresReferencia =  \"Existe campos vazios ou incorretos!\";\n                    this.colorValoresReferencia = 'success',\n                    this.snackbarValoresReferencia = true;\n                    this.closeValoresReferencia();\n                }\n            }\n        },\n    }\n}\n\n",{"version":3,"sources":["ParametrosExame.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"ParametrosExame.vue","sourceRoot":"src/components/helper","sourcesContent":["<template>\n    <v-row justify=\"center\">\n        <v-dialog v-model=\"dialog\" fullscreen hide-overlay transition=\"dialog-bottom-transition\">\n\n            <v-card>\n                <v-toolbar dark color=\"error\">\n                    <v-btn icon dark @click=\"$emit('setFalseDialog')\">\n                        <v-icon>mdi-close</v-icon>\n                    </v-btn>\n                    <v-toolbar-title>{{ exame.exame }}</v-toolbar-title>\n                        <div class=\"flex-grow-1\"></div>\n                        <v-toolbar-items>\n                        <v-btn dark text @click=\"$emit('setFalseDialog')\">Salvar</v-btn>\n                    </v-toolbar-items>\n                </v-toolbar>\n\n                <v-data-table\n                    :headers=\"headers\"\n                    :items=\"desserts\"\n                    :search=\"search\"\n                    class=\"elevation-1 ma-2\"\n                    :footer-props=\"{\n                        'items-per-page-options': [8,10,12,14]\n                    }\"\n                >\n\n                    <template v-slot:top>\n                        <v-toolbar flat color=\"white\">\n\n                            <v-container>\n                                <v-row>\n                                    <v-col cols=\"12\" sm=\"12\" md=\"5\">\n                                        <v-text-field\n                                            v-model=\"search\"\n                                            append-icon=\"mdi-magnify\"\n                                            label=\"Buscar\"\n                                            single-line\n                                            hide-details\n                                            outlined\n                                        ></v-text-field>\n                                    </v-col>\n                                </v-row>\n                            </v-container>\n\n                            <snackbar\n                                :textoSnackbar=\"textoSnackbar\"\n                                :color=\"color\"\n                                :snackbar=\"snackbar\"\n                                v-on:closeSnackbar=\"closeSnackbar\"\n                            ></snackbar>\n\n                            <div class=\"flex-grow-1\"></div>\n\n                            <v-dialog v-model=\"dialogAddParametro\" max-width=\"1000px\">\n\n                                <template v-slot:activator=\"{ on }\">\n                                    <v-btn color=\"primary\" class=\"mb-2\" @click=\"dialogAddParametro = true\" >Adicionar</v-btn>\n                                </template>\n\n                                <v-card>\n                                    <v-card-title>\n                                        <span class=\"headline\">{{ formTitle }}</span>\n                                    </v-card-title>\n\n                                    <v-card-text>\n                                        <v-container>\n                                            <v-row>\n                                                <v-col cols=\"12\" sm=\"12\" md=\"6\">\n                                                    <v-text-field\n                                                        v-model=\"editedItem.parametro\"\n                                                        :rules=\"[v => !!v || 'Obrigatório prencher o parâmetro!']\"\n                                                        label=\"Parâmetro\"\n                                                        outlined\n                                                    ></v-text-field>\n                                                </v-col>\n\n                                                <v-col cols=\"12\" sm=\"12\" md=\"6\">\n                                                    <v-text-field\n                                                        v-model=\"editedItem.unidadeMedida\"\n                                                        :rules=\"[v => !!v || 'Obrigatório prencher a unidade medida!']\"\n                                                        label=\"Unidade Medida\"\n                                                        outlined\n                                                    ></v-text-field>\n                                                </v-col>\n                                            </v-row>\n                                        </v-container>\n                                    </v-card-text>\n\n\n\n\n\n                                    <v-data-table\n                                        :headers=\"headersValoresRerefencia\"\n                                        :items=\"dessertsValoresRerefencia\"\n                                        class=\"elevation-1 ma-2\"\n                                        :footer-props=\"{\n                                            'items-per-page-options': [8,10,12,14]\n                                        }\"\n\n                                        v-if=\"mostraTabelaValoresReferencia\"\n                                    >\n\n                                        <template v-slot:top>\n                                            <v-toolbar flat color=\"white\">\n\n                                                <snackbar\n                                                    :textoSnackbar=\"textoSnackbarValoresReferencia\"\n                                                    :color=\"colorValoresReferencia\"\n                                                    :snackbar=\"snackbarValoresReferencia\"\n                                                    v-on:closeSnackbar=\"closeSnackbarValoresReferencia\"\n                                                ></snackbar>\n\n                                                <div class=\"flex-grow-1\"></div>\n\n                                                <v-dialog v-model=\"dialogValoresReferencia\" max-width=\"1000px\">\n\n                                                    <template v-slot:activator=\"{ on }\">\n                                                        <v-btn color=\"primary\" class=\"mb-2\" @click=\"dialogValoresReferencia = true\" >Adicionar</v-btn>\n                                                    </template>\n\n                                                    <v-card>\n                                                        <v-card-title>\n                                                            <span class=\"headline\">{{ formTitleValoresRefencia }}</span>\n                                                        </v-card-title>\n\n                                                        <v-card-text>\n                                                            <v-container>\n                                                                <v-row>\n                                                                    <v-col cols=\"12\" sm=\"12\" md=\"4\">\n                                                                        <v-text-field\n                                                                            v-model=\"editedItemValoresReferencia.valorMinimo\"\n                                                                            :rules=\"[v => !!v || 'Obrigatório prencher o valor mínimo!']\"\n                                                                            label=\"Valor mínimo\"\n                                                                            outlined\n                                                                        ></v-text-field>\n                                                                    </v-col>\n                                                                    <v-col cols=\"12\" sm=\"12\" md=\"4\">\n                                                                        <v-select\n                                                                            :items=\"comparacoes\"\n                                                                            v-model=\"editedItemValoresReferencia.comparacao\"\n                                                                            :rules=\"[v => !!v || 'Obrigatório prencher a comparação!']\"\n                                                                            label=\"Comparação\"\n                                                                            outlined\n                                                                        ></v-select>\n                                                                    </v-col>\n\n                                                                    <v-col cols=\"12\" sm=\"12\" md=\"4\">\n                                                                        <v-text-field\n                                                                            v-model=\"editedItemValoresReferencia.valorMaximo\"\n                                                                            :rules=\"[v => !!v || 'Obrigatório prencher o valor maximo!']\"\n                                                                            label=\"Valor maximo\"\n                                                                            outlined\n                                                                        ></v-text-field>\n                                                                    </v-col>\n\n                                                                </v-row>\n\n                                                                <v-row>\n                                                                    <v-col cols=\"12\" sm=\"12\" md=\"4\">\n                                                                        <v-text-field\n                                                                            v-model=\"editedItemValoresReferencia.idadeMinima\"\n                                                                            :rules=\"[v => !!v || 'Obrigatório prencher a idade mínimo!']\"\n                                                                            label=\"Idade mínima\"\n                                                                            outlined\n                                                                        ></v-text-field>\n                                                                    </v-col>\n                                                                    <v-col cols=\"12\" sm=\"12\" md=\"4\">\n                                                                        <v-select\n                                                                            :items=\"comparacoes\"\n                                                                            v-model=\"editedItemValoresReferencia.idade\"\n                                                                            :rules=\"[v => !!v || 'Obrigatório prencher a comparação idade!']\"\n                                                                            label=\"Comparação\"\n                                                                            outlined\n                                                                        ></v-select>\n                                                                    </v-col>\n\n                                                                    <v-col cols=\"12\" sm=\"12\" md=\"4\">\n                                                                        <v-text-field\n                                                                            v-model=\"editedItemValoresReferencia.idadeMaxima\"\n                                                                            :rules=\"[v => !!v || 'Obrigatório prencher a idade maxima!']\"\n                                                                            label=\"Idade maxima\"\n                                                                            outlined\n                                                                        ></v-text-field>\n                                                                    </v-col>\n                                                                </v-row>\n\n                                                                <v-row>\n                                                                    <v-col cols=\"12\" sm=\"12\" md=\"4\">\n                                                                        <v-select\n                                                                            :items=\"sexos\"\n                                                                            v-model=\"editedItemValoresReferencia.sexo\"\n                                                                            :rules=\"[v => !!v || 'Obrigatório selecionar o sexo!']\"\n                                                                            label=\"Sexo\"\n                                                                            outlined\n                                                                        ></v-select>\n                                                                    </v-col>\n                                                                </v-row>\n\n                                                            </v-container>\n                                                        </v-card-text>\n\n\n\n                                                        <v-card-actions>\n                                                            <div class=\"flex-grow-1\"></div>\n                                                            <v-btn color=\"blue darken-1\" text @click=\"closeValoresReferencia\">Cancelar</v-btn>\n                                                            <v-btn color=\"blue darken-1\" text @click=\"saveValoresReferencia()\">Salvar</v-btn>\n                                                        </v-card-actions>\n                                                    </v-card>\n                                                </v-dialog>\n                                            </v-toolbar>\n                                        </template>\n\n                                        <template v-slot:item.action=\"{ item }\">\n                                            <v-icon\n                                                small\n                                                class=\"mr-2\"\n                                                @click=\"editItemValorReferencia(item)\"\n                                            >\n                                                mdi-pencil\n                                            </v-icon>\n                                            <v-icon\n                                                small\n                                                @click=\"deleteItemValorReferencia(item)\"\n                                            >\n                                                mdi-delete\n                                            </v-icon>\n                                            </template>\n\n                                    </v-data-table>\n\n                                    <v-card-actions>\n                                        <div class=\"flex-grow-1\"></div>\n                                        <v-btn color=\"blue darken-1\" text @click=\"close\">Cancelar</v-btn>\n                                        <v-btn color=\"blue darken-1\" text @click=\"save\">Salvar</v-btn>\n                                    </v-card-actions>\n                                </v-card>\n                            </v-dialog>\n                        </v-toolbar>\n                    </template>\n\n                    <template v-slot:item.action=\"{ item }\">\n\n                        <v-icon\n                            small\n                            class=\"mr-2\"\n                            @click=\"editItem(item)\"\n                        >\n                            mdi-pencil\n                        </v-icon>\n                        <v-icon\n                            small\n                            @click=\"deleteItem(item)\"\n                        >\n                            mdi-delete\n                        </v-icon>\n                        </template>\n\n                        <template v-slot:no-data>\n                            <v-btn color=\"primary\" @click=\"initialize\">Reset</v-btn>\n                        </template>\n\n                </v-data-table>\n\n            </v-card>\n        </v-dialog>\n    </v-row>\n</template>\n\n<script>\n\n    export default {\n        props: ['dialog', 'idExame'],\n        data: () => ({\n            exame: \"\",\n            dialogAddParametro: false,\n            headers: [\n                {\n                    text: 'Parâmetro',\n                    align: 'left',\n                    sortable: true,\n                    value: 'parametro',\n                },\n                { text: 'Unidade medida', value: 'unidadeMedida' },\n                { text: 'Ações', value: 'action', sortable: false },\n            ],\n            desserts: [],\n            search: \"\",\n            editedIndex: -1,\n            editedItem: {\n                parametro: \"\",\n                unidadeMedida: \"\",\n                idExame: null,\n                createdAt: \"\",\n                updatedAt: \"\"\n            },\n            defaultItem: {\n                parametro: \"\",\n                unidadeMedida: \"\",\n                idExame: null,\n                createdAt: \"\",\n                updatedAt: \"\"\n            },\n            textoSnackbar: \"\",\n            color: 'success',\n            snackbar: false,\n            comparacoes: [\n                {\n                    text: \"< (Menor que minimo)\",\n                    value: \"<\"\n                },\n                {\n                    text: \"> (Maior que maximo)\",\n                    value: \">\"\n                },\n                {\n                    text: \"<> (Entre o minimo e maximo)\",\n                    value: \"<>\"\n                }\n            ],\n            sexos: [\n                \"FEMININO\",\n                \"MASCULINO\"\n            ],\n            dessertsValoresRerefencia: [],\n            headersValoresRerefencia: [\n                {\n                    text: 'Valor',\n                    align: 'left',\n                    sortable: true,\n                    value: 'valor',\n                },\n                { text: 'idade', value: 'idade' },\n                { text: 'sexo', value: 'sexo' },\n                { text: 'Ações', value: 'action', sortable: false },\n            ],\n            editedIndexValoresReferencia: -1,\n            editedItemValoresReferencia: {\n                comparacao: \"\",\n                idade: \"\",\n                idadeMinima: \"\",\n                idadeMaxima: \"\",\n                valorMinimo: \"\",\n                valorMaximo: \"\",\n                sexo: \"\",\n                idParametro: null,\n                createdAt: \"\",\n                updatedAt: \"\"\n            },\n            defaultItemValoresReferencia: {\n                comparacao: \"\",\n                idade: \"\",\n                idadeMinima: \"\",\n                idadeMaxima: \"\",\n                valorMinimo: \"\",\n                valorMaximo: \"\",\n                sexo: \"\",\n                idParametro: null,\n                createdAt: \"\",\n                updatedAt: \"\"\n            },\n            textoSnackbarValoresReferencia: \"\",\n            colorValoresReferencia: 'success',\n            snackbarValoresReferencia: false,\n            dialogValoresReferencia: false,\n            mostraTabelaValoresReferencia: false\n        }),\n        created () {\n            this.initialize()\n        },\n        computed: {\n            formTitle () {\n                return this.editedIndex === -1 ? 'Novo Parâmetro' : 'Editar Parâmetro'\n            },\n            formTitleValoresRefencia () {\n                return this.editedIndex === -1 ? 'Novo Valor Refêrencia' : 'Editar Valor Refêrencia'\n            }\n        },\n        watch: {\n            dialog() {\n                this.axios.get('http://localhost:3000/exame/' + this.idExame).then(response => {\n                    this.exame = response.data;\n                });\n\n                this.atualizaParametros();\n            },\n            dialogAddParametro (val) {\n                this.axios.get('http://localhost:3000/referenciaParametroExame/getByIdParametro/' + this.editedItem.id).then(response => {\n                    this.dessertsValoresReferencia = response.data;\n                });\n                // this.mostraTabelaValoresReferencia = false;\n                val || this.close();\n            },\n        },\n        methods: {\n            initialize () {\n\n            },\n            closeSnackbar () {\n                this.snackbar = false;\n            },\n            atualizaParametros() {\n                this.axios.get('http://localhost:3000/parametroExame/getByIdExame/' + this.idExame ).then(response => {\n                    this.desserts = response.data;\n                });\n            },\n            editItem (item) {\n                this.editedIndex = this.desserts.indexOf(item);\n                this.editedItem = Object.assign({}, item);\n                this.atualizaValoresReferencia();\n                this.mostraTabelaValoresReferencia = true;\n                this.dialogAddParametro = true;\n            },\n            deleteItem (item) {\n                this.axios.delete('http://localhost:3000/parametroExame/' + item.id + \"/delete\").then(response => {\n                    if(response.data){\n                        this.snackbar = true;\n                        this.color = 'success';\n                        this.textoSnackbar = \"Parâmetro apagado com sucesso!\";\n                        this.atualizaParametros();\n                    }else {\n                        this.snackbar = true;\n                        this.color = 'error';\n                        this.textoSnackbar = \"Ocorreu um erro ao tentar apagar o registro!\";\n                    }\n                });\n            },\n            close () {\n                this.snackbarValoresReferencia = false;\n                this.dialogAddParametro = false;\n                this.mostraTabelaValoresReferencia = false;\n                setTimeout(() => {\n                    this.editedItem = Object.assign({}, this.defaultItem)\n                    this.editedIndex = -1\n                }, 300);\n            },\n            validaCampos() {\n                return  this.editedItem.parametro != '' && this.editedItem.unidadeMedida != '';\n            },\n            save () {\n                this.snackbarValoresReferencia = false;\n                if (this.editedIndex > -1) {\n                    this.editedItem.idExame = this.idExame;\n                    this.axios.put('http://localhost:3000/parametroExame', this.editedItem).then(response => {\n                        if(response.data){\n                            this.textoSnackbar = \"Registro atualizado com sucesso!\";\n                            this.snackbar = true;\n                            this.color = 'success';\n                            this.atualizaParametros();\n                            this.dialogAddParametro = false;\n                        }else {\n                            this.snackbar = true;\n                            this.color = 'error';\n                            this.textoSnackbar = \"Ocorreu um erro ao atualizar!\";\n                            this.dialogAddParametro = false;\n                        }\n                    });\n                } else {\n                    if(this.validaCampos()){\n                        this.editedItem.idExame = this.idExame;\n                        this.axios.post('http://localhost:3000/parametroExame', this.editedItem).then(response => {\n                            if(response.data.id){\n                                this.textoSnackbar = \"Parâmetro inserida com sucesso!\";\n                                this.snackbar = true;\n                                this.color = 'success';\n                                this.atualizaParametros();\n                                this.dialogAddParametro = false;\n                            }else {\n                                this.snackbar = true;\n                                this.color = 'error';\n                                this.textoSnackbar = \"Ocorreu um erro ao cadastrar!\";\n                                this.dialogAddParametro = false;\n                            }\n                        });\n                    }else {\n                        this.snackbar = true;\n                        this.color = 'error';\n                        this.textoSnackbar = \"Existe campos vazios ou incorretos!\";\n                        this.dialogAddParametro = false;\n                    }\n                }\n            },\n            closeSnackbarValoresReferencia () {\n                this.snackbarValoresReferencia = false;\n            },\n            atualizaValoresReferencia() {\n                this.axios.get('http://localhost:3000/referenciaParametroExame/getByIdParametro/' + this.editedItem.id).then(response => {\n                    this.dessertsValoresRerefencia = response.data;\n\n                    for(var i = 0; i < response.data.length; i++){\n                        this.dessertsValoresRerefencia[i].valor = (parseInt(response.data[i].valorMinimo) == 0 ? \" \" : response.data[i].valorMinimo) + \" \" + response.data[i].comparacao + \" \" + (parseInt(response.data[i].valorMaximo) == 0 ? \" \" : response.data[i].valorMaximo);\n                        this.dessertsValoresRerefencia[i].idade = (parseInt(response.data[i].idadeMinima) == 0 ? \" \" : response.data[i].idadeMinima) + \" \" + response.data[i].idade + \" \" + (parseInt(response.data[i].idadeMaxima) == 0 ? \" \" : response.data[i].idadeMaxima);\n                    }\n\n                });\n            },\n            editItemValorReferencia (item) {\n                this.editedIndexValoresReferencia = this.dessertsValoresRerefencia.indexOf(item);\n                this.editedItemValoresReferencia = Object.assign({}, item);\n                this.dialogValoresReferencia = true;\n            },\n            deleteItemValorReferencia (item) {\n                this.axios.delete('http://localhost:3000/referenciaParametroExame/' + item.id + \"/delete\").then(response => {\n                    if(response.data){\n                        this.textoSnackbarValoresReferencia = \"Valor refência apagado com sucesso!\";\n                        this.snackbarValoresReferencia = true;\n                        this.colorValoresReferencia = 'success';\n\n                        this.atualizaValoresReferencia();\n                    }else {\n                        this.textoSnackbarValoresReferencia = \"Ocorreu um erro ao tentar apagar o registro!\";\n                        this.snackbarValoresReferencia = true;\n                        this.colorValoresReferenciar = 'error';\n                    }\n                });\n            },\n            closeValoresReferencia () {\n                this.dialogValoresReferencia = false;\n            },\n            validaCamposValoresReferencia() {\n                var valores = false;\n                var idade = false;\n                if((this.editedIndexValoresReferencia.valorMinimo != \"\" && this.editedIndexValoresReferencia.comparacao != \"\" && this.editedIndexValoresReferencia.valorMaximo != \"\")\n                    || (this.editedIndexValoresReferencia.valorMinimo == \"\" && this.editedIndexValoresReferencia.comparacao != \"\" && this.editedIndexValoresReferencia.valorMaximo != \"\")\n                    || (this.editedIndexValoresReferencia.valorMinimo != \"\" && this.editedIndexValoresReferencia.comparacao != \"\" && this.editedIndexValoresReferencia.valorMaximo == \"\")){\n                        valores = true;\n                }\n\n                if((this.editedIndexValoresReferencia.idadeMinima != \"\" && this.editedIndexValoresReferencia.idade != \"\" && this.editedIndexValoresReferencia.idadeMaxima != \"\")\n                    || (this.editedIndexValoresReferencia.idadeMinima == \"\" && this.editedIndexValoresReferencia.idade != \"\" && this.editedIndexValoresReferencia.idadeMaxima != \"\")\n                    || (this.editedIndexValoresReferencia.idadeMinima != \"\" && this.editedIndexValoresReferencia.idade != \"\" && this.editedIndexValoresReferencia.idadeMaxima == \"\")){\n                        idade = true;\n                }\n\n                return valores && idade && this.editedIndexValoresReferencia.sexo != \"\";\n            },\n            saveValoresReferencia () {\n                if (this.editedIndexValoresReferencia > -1) {\n                    this.editedItemValoresReferencia.idParametro = this.editedItem.id;\n                    this.axios.put('http://localhost:3000/referenciaParametroExame', this.editedItemValoresReferencia).then(response => {\n                        if(response.data){\n                            this.textoSnackbarValoresReferencia = \"Registro atualizado com sucesso!\";\n                            this.snackbarValoresReferencia = true;\n                            this.colorValoresReferencia = 'success';\n                            this.atualizaValoresReferencia();\n                            this.closeValoresReferencia();\n                        }else {\n                            this.textoSnackbarValoresReferencia = \"Ocorreu um erro ao atualizar!\";\n                            this.snackbarValoresReferencia = true;\n                            this.colorValoresReferencia = 'error';\n                            this.closeValoresReferencia();\n                        }\n                    });\n                } else {\n                    if(this.validaCamposValoresReferencia()){\n                        this.editedItemValoresReferencia.idParametro = this.editedItem.id;\n                        this.axios.post('http://localhost:3000/referenciaParametroExame', this.editedItemValoresReferencia).then(response => {\n                            if(response.data.id){\n                                this.textoSnackbarValoresReferencia = \"Valor refêrencia inserido com sucesso!\";\n                                this.snackbarValoresReferencia = true;\n                                this.colorValoresReferencia = 'success';\n                                this.atualizaValoresReferencia();\n                                this.closeValoresReferencia();\n                            }else {\n                                this.textoSnackbarValoresReferencia = \"Ocorreu um erro ao cadastrar!\";\n                                this.snackbarValoresReferencia = true;\n                                this.colorValoresReferencia = 'error';\n                                this.closeValoresReferencia();\n                            }\n                        });\n                    }else {\n                        this.textoSnackbarValoresReferencia =  \"Existe campos vazios ou incorretos!\";\n                        this.colorValoresReferencia = 'success',\n                        this.snackbarValoresReferencia = true;\n                        this.closeValoresReferencia();\n                    }\n                }\n            },\n        }\n    }\n\n</script>\n"]}]}